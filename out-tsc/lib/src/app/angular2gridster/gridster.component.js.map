{"version":3,"file":"gridster.component.js","sourceRoot":"","sources":["../../../../../src/app/angular2gridster/gridster.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component, OnInit, AfterContentInit, OnDestroy, ElementRef, ViewChild, NgZone,\r\n    Input, Output, EventEmitter, ChangeDetectionStrategy, HostBinding, ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Observable, Subscription, ConnectableObservable } from 'rxjs';\r\nimport { debounceTime, filter, publish } from 'rxjs/operators';\r\n\r\nimport { utils } from './utils/utils';\r\nimport { GridsterService } from './gridster.service';\r\nimport { IGridsterOptions } from './IGridsterOptions';\r\nimport { IGridsterDraggableOptions } from './IGridsterDraggableOptions';\r\nimport { GridsterPrototypeService } from './gridster-prototype/gridster-prototype.service';\r\nimport { GridsterItemPrototypeDirective } from './gridster-prototype/gridster-item-prototype.directive';\r\nimport { GridListItem } from './gridList/GridListItem';\r\nimport { GridsterOptions } from './GridsterOptions';\r\n\r\n\r\n@Component({\r\n    selector: 'ngx-gridster',\r\n    template: `<div class=\"gridster-container\">\r\n      <canvas class=\"gridster-background-grid\" #backgroundGrid></canvas>\r\n      <ng-content></ng-content>\r\n      <div class=\"position-highlight\" style=\"display:none;\" #positionHighlight>\r\n        <div class=\"inner\"></div>\r\n      </div>\r\n    </div>`,\r\n    styles: [`\r\n    ngx-gridster {\r\n        position: relative;\r\n        display: block;\r\n        left: 0;\r\n        width: 100%;\r\n    }\r\n\r\n    ngx-gridster.gridster--dragging {\r\n        -moz-user-select: none;\r\n        -khtml-user-select: none;\r\n        -webkit-user-select: none;\r\n        -ms-user-select: none;\r\n        user-select: none;\r\n    }\r\n\r\n    ngx-gridster .gridster-container {\r\n        position: relative;\r\n        width: 100%;\r\n        list-style: none;\r\n        -webkit-transition: width 0.2s, height 0.2s;\r\n        transition: width 0.2s, height 0.2s;\r\n    }\r\n\r\n    ngx-gridster .position-highlight {\r\n        display: block;\r\n        position: absolute;\r\n        z-index: 1;\r\n    }\r\n\r\n    ngx-gridster .gridster-background-grid {\r\n        z-index: 0;\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%\r\n    }\r\n    `],\r\n    providers: [GridsterService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GridsterComponent implements OnInit, AfterContentInit, OnDestroy {\r\n    @Input() public options: IGridsterOptions;\r\n    @Output() public optionsChange = new EventEmitter<any>();\r\n    @Output() public ready = new EventEmitter<any>();\r\n    @Output() public reflow = new EventEmitter<any>();\r\n    @Output() public prototypeDrop = new EventEmitter<{item: GridListItem}>();\r\n    @Output() public prototypeEnter = new EventEmitter<{item: GridListItem}>();\r\n    @Output() public prototypeOut = new EventEmitter<{item: GridListItem}>();\r\n    @Input() public draggableOptions: IGridsterDraggableOptions;\r\n    @Input() public parent: GridsterComponent;\r\n\r\n    @ViewChild('positionHighlight') public $positionHighlight: any;\r\n    @ViewChild('backgroundGrid') public $backgroundGrid: any;\r\n    @HostBinding('class.gridster--dragging') public isDragging = false;\r\n    @HostBinding('class.gridster--resizing') public isResizing = false;\r\n\r\n    @HostBinding('class.gridster--ready') public isReady = false;\r\n    public gridster: GridsterService;\r\n    public $element: HTMLElement;\r\n\r\n    public gridsterOptions: GridsterOptions;\r\n    public isPrototypeEntered = false;\r\n    private isDisabled = false;\r\n    private subscription = new Subscription();\r\n\r\n    constructor(private zone: NgZone,\r\n                elementRef: ElementRef, gridster: GridsterService,\r\n                private gridsterPrototype: GridsterPrototypeService) {\r\n\r\n        this.gridster = gridster;\r\n        this.$element = elementRef.nativeElement;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.gridsterOptions = new GridsterOptions(this.options);\r\n\r\n        if (this.options.useCSSTransforms) {\r\n            this.$element.classList.add('css-transform');\r\n        }\r\n\r\n        this.subscription.add(\r\n            this.gridsterOptions.change.subscribe(options => {\r\n                this.gridster.options = options;\r\n                if (this.gridster.gridList) {\r\n                    this.gridster.gridList.options = options;\r\n                }\r\n                this.optionsChange.emit(options);\r\n            })\r\n        );\r\n\r\n        this.gridster.init(this);\r\n\r\n        this.subscription.add(\r\n            Observable.fromEvent(window, 'resize').pipe(\r\n                debounceTime(this.gridster.options.responsiveDebounce || 0),\r\n                filter(() => this.gridster.options.responsiveView)\r\n            ).subscribe(() => this.reload())\r\n        );\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            this.subscription.add(\r\n                Observable.fromEvent(document, 'scroll', { passive: true }).subscribe(() => this.updateGridsterElementData())\r\n            );\r\n        });\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.gridster.start();\r\n\r\n        this.updateGridsterElementData();\r\n\r\n        this.connectGridsterPrototype();\r\n\r\n        this.gridster.$positionHighlight = this.$positionHighlight.nativeElement;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Change gridster config option and rebuild\r\n     * @param string name\r\n     * @param any value\r\n     * @return GridsterComponent\r\n     */\r\n    setOption(name: keyof IGridsterOptions, value: any) {\r\n        if (name === 'dragAndDrop') {\r\n            if (value) {\r\n                this.enableDraggable();\r\n            } else {\r\n                this.disableDraggable();\r\n            }\r\n        }\r\n        if (name === 'resizable') {\r\n            if (value) {\r\n                this.enableResizable();\r\n            } else {\r\n                this.disableResizable();\r\n            }\r\n        }\r\n        if (name === 'lanes') {\r\n            this.gridster.options.lanes = value;\r\n\r\n            this.gridster.gridList.fixItemsPositions(this.gridster.options);\r\n            this.reflowGridster();\r\n        }\r\n        if (name === 'direction') {\r\n            this.gridster.options.direction = value;\r\n            this.gridster.gridList.pullItemsToLeft();\r\n        }\r\n        if (name === 'widthHeightRatio') {\r\n            this.gridster.options.widthHeightRatio = parseFloat(value || 1);\r\n        }\r\n        if (name === 'responsiveView') {\r\n            this.gridster.options.responsiveView = !!value;\r\n        }\r\n        this.gridster.gridList.setOption(name, value);\r\n\r\n        return this;\r\n    }\r\n\r\n    reload() {\r\n        setTimeout(() => {\r\n            this.gridster.fixItemsPositions();\r\n            this.reflowGridster();\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    reflowGridster(isInit = false) {\r\n        this.gridster.reflow();\r\n        this.reflow.emit({\r\n            isInit: isInit,\r\n            gridsterComponent: this\r\n        });\r\n    }\r\n\r\n    updateGridsterElementData() {\r\n        this.gridster.gridsterScrollData = this.getScrollPositionFromParents(this.$element);\r\n        this.gridster.gridsterRect = this.$element.getBoundingClientRect();\r\n    }\r\n\r\n    setReady() {\r\n        setTimeout(() => this.isReady = true);\r\n        this.ready.emit();\r\n    }\r\n\r\n    adjustItemsHeightToContent(scrollableItemElementSelector: string = '.gridster-item-inner') {\r\n        this.gridster.items\r\n            // convert each item to object with information about content height and scroll height\r\n            .map((item: GridListItem) => {\r\n                const scrollEl = item.$element.querySelector(scrollableItemElementSelector);\r\n                const contentEl = scrollEl.lastElementChild;\r\n                const scrollElDistance = utils.getRelativeCoordinates(scrollEl, item.$element);\r\n                const scrollElRect = scrollEl.getBoundingClientRect();\r\n                const contentRect = contentEl.getBoundingClientRect();\r\n\r\n                return {\r\n                    item,\r\n                    contentHeight: contentRect.bottom - scrollElRect.top,\r\n                    scrollElDistance\r\n                };\r\n            })\r\n            // calculate required height in lanes amount and update item \"h\"\r\n            .forEach((data) => {\r\n                data.item.h = Math.ceil(\r\n                    <any>((data.contentHeight) / (this.gridster.cellHeight - data.scrollElDistance.top))\r\n                );\r\n            });\r\n\r\n        this.gridster.fixItemsPositions();\r\n        this.gridster.reflow();\r\n    }\r\n\r\n    disable(item: any) {\r\n        const itemIdx = this.gridster.items.indexOf(item.itemComponent);\r\n\r\n        this.isDisabled = true;\r\n        if (itemIdx >= 0) {\r\n            delete this.gridster.items[this.gridster.items.indexOf(item.itemComponent)];\r\n        }\r\n        this.gridster.onDragOut(item);\r\n    }\r\n\r\n    enable() {\r\n        this.isDisabled = false;\r\n    }\r\n\r\n    private getScrollPositionFromParents(element: Element, data = { scrollTop: 0, scrollLeft: 0 })\r\n        : { scrollTop: number, scrollLeft: number } {\r\n\r\n        if (element.parentElement && element.parentElement !== document.body) {\r\n            data.scrollTop += element.parentElement.scrollTop;\r\n            data.scrollLeft += element.parentElement.scrollLeft;\r\n\r\n            return this.getScrollPositionFromParents(element.parentElement, data);\r\n        }\r\n\r\n        return {\r\n            scrollTop: data.scrollTop,\r\n            scrollLeft: data.scrollLeft\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Connect gridster prototype item to gridster dragging hooks (onStart, onDrag, onStop).\r\n     */\r\n    private connectGridsterPrototype() {\r\n        this.gridsterPrototype.observeDropOut(this.gridster).subscribe();\r\n\r\n        const dropOverObservable = <ConnectableObservable<any>>this.gridsterPrototype.observeDropOver(this.gridster).pipe(publish());\r\n\r\n        const dragObservable = this.gridsterPrototype.observeDragOver(this.gridster);\r\n\r\n        dragObservable.dragOver.pipe(filter(() => !this.isDisabled)).subscribe((prototype: GridsterItemPrototypeDirective) => {\r\n            if (!this.isPrototypeEntered) {\r\n                return;\r\n            }\r\n            this.gridster.onDrag(prototype.item);\r\n        });\r\n\r\n        dragObservable.dragEnter.pipe(filter(() => !this.isDisabled)).subscribe((prototype: GridsterItemPrototypeDirective) => {\r\n            this.isPrototypeEntered = true;\r\n\r\n            if (this.gridster.items.indexOf(prototype.item) < 0) {\r\n                this.gridster.items.push(prototype.item);\r\n            }\r\n            this.gridster.onStart(prototype.item);\r\n            prototype.setDragContextGridster(this.gridster);\r\n\r\n            if (this.parent) {\r\n                this.parent.disable(prototype.item);\r\n            }\r\n            this.prototypeEnter.emit({item: prototype.item});\r\n        });\r\n\r\n        dragObservable.dragOut.pipe(filter(() => !this.isDisabled)).subscribe((prototype: GridsterItemPrototypeDirective) => {\r\n            if (!this.isPrototypeEntered) {\r\n                return;\r\n            }\r\n            this.gridster.onDragOut(prototype.item);\r\n            this.isPrototypeEntered = false;\r\n\r\n            this.prototypeOut.emit({item: prototype.item});\r\n\r\n            if (this.parent) {\r\n                this.parent.enable();\r\n\r\n                this.parent.isPrototypeEntered = true;\r\n                if (this.parent.gridster.items.indexOf(prototype.item) < 0) {\r\n                    this.parent.gridster.items.push(prototype.item);\r\n                }\r\n                this.parent.gridster.onStart(prototype.item);\r\n                prototype.setDragContextGridster(this.parent.gridster);\r\n                // timeout is needed to be sure that \"enter\" event is fired after \"out\"\r\n                setTimeout(() => {\r\n                    this.parent.prototypeEnter.emit({item: prototype.item});\r\n                    prototype.onEnter(this.parent.gridster);\r\n                });\r\n            }\r\n        });\r\n\r\n        dropOverObservable.pipe(filter(() => !this.isDisabled)).subscribe((data: any) => {\r\n            if (!this.isPrototypeEntered) {\r\n                return;\r\n            }\r\n\r\n            this.gridster.onStop(data.item.item);\r\n            this.gridster.removeItem(data.item.item);\r\n\r\n            this.isPrototypeEntered = false;\r\n            if (this.parent) {\r\n                this.parent.enable();\r\n            }\r\n            this.prototypeDrop.emit({item: data.item.item});\r\n        });\r\n\r\n        dropOverObservable.connect();\r\n    }\r\n\r\n    private enableDraggable() {\r\n        this.gridster.options.dragAndDrop = true;\r\n\r\n        this.gridster.items\r\n            .filter(item => item.itemComponent && item.itemComponent.dragAndDrop)\r\n            .forEach((item: GridListItem) => item.itemComponent.enableDragDrop());\r\n    }\r\n\r\n    private disableDraggable() {\r\n        this.gridster.options.dragAndDrop = false;\r\n\r\n        this.gridster.items\r\n            .filter(item => item.itemComponent)\r\n            .forEach((item: GridListItem) => item.itemComponent.disableDraggable());\r\n    }\r\n\r\n    private enableResizable() {\r\n        this.gridster.options.resizable = true;\r\n\r\n        this.gridster.items\r\n            .filter(item => item.itemComponent && item.itemComponent.resizable)\r\n            .forEach((item: GridListItem) => item.itemComponent.enableResizable());\r\n    }\r\n\r\n    private disableResizable() {\r\n        this.gridster.options.resizable = false;\r\n\r\n        this.gridster.items.forEach((item: GridListItem) => item.itemComponent.disableResizable());\r\n    }\r\n}\r\n"]}