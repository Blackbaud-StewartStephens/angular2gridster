{"version":3,"file":"gridster-item-prototype.directive.js","sourceRoot":"","sources":["../../../../../../src/app/angular2gridster/gridster-prototype/gridster-item-prototype.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Input, Output, EventEmitter, OnInit, OnDestroy,\r\n    NgZone} from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { GridsterPrototypeService } from './gridster-prototype.service';\r\nimport { GridListItem } from '../gridList/GridListItem';\r\nimport { GridsterService } from '../gridster.service';\r\nimport { DraggableEvent } from '../utils/DraggableEvent';\r\nimport { Draggable } from '../utils/draggable';\r\nimport { utils } from '../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[ngxGridsterItemPrototype]'\r\n})\r\nexport class GridsterItemPrototypeDirective implements OnInit, OnDestroy {\r\n    @Output() drop = new EventEmitter();\r\n    @Output() start = new EventEmitter();\r\n    @Output() cancel = new EventEmitter();\r\n    @Output() enter = new EventEmitter();\r\n    @Output() out = new EventEmitter();\r\n\r\n    @Input() data: any;\r\n    @Input() config: any = {};\r\n\r\n    public x = 0;\r\n    public y = 0;\r\n    @Input() w: number;\r\n    @Input() wSm: number;\r\n    @Input() wMd: number;\r\n    @Input() wLg: number;\r\n    @Input() wXl: number;\r\n    @Input() h: number;\r\n    @Input() hSm: number;\r\n    @Input() hMd: number;\r\n    @Input() hLg: number;\r\n    @Input() hXl: number;\r\n\r\n    @Input() variableHeight: boolean = false;\r\n    @Input() variableHeightContainToRow: boolean = false;\r\n\r\n    positionX: number;\r\n    positionY: number;\r\n\r\n    autoSize = false;\r\n\r\n    $element: HTMLElement;\r\n\r\n    /**\r\n     * Mouse drag observable\r\n     */\r\n    drag: Observable<any>;\r\n\r\n    /**\r\n     * Subscribtion for drag observable\r\n     */\r\n    dragSubscription: Subscription;\r\n\r\n    isDragging = false;\r\n\r\n    item: GridListItem;\r\n\r\n    containerRectange: ClientRect;\r\n\r\n    private dragContextGridster: GridsterService;\r\n    private parentRect: ClientRect;\r\n    private parentOffset: {left: number, top: number};\r\n\r\n    private subscribtions: Array<Subscription> = [];\r\n\r\n    // must be set to true because of item dragAndDrop configuration\r\n    get dragAndDrop(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get gridster(): GridsterService {\r\n        return this.dragContextGridster;\r\n    }\r\n\r\n    constructor(private zone: NgZone,\r\n                private elementRef: ElementRef,\r\n                private gridsterPrototype: GridsterPrototypeService) {\r\n\r\n        this.item = (new GridListItem()).setFromGridsterItemPrototype(this);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.wSm = this.wSm || this.w;\r\n        this.hSm = this.hSm || this.h;\r\n        this.wMd = this.wMd || this.w;\r\n        this.hMd = this.hMd || this.h;\r\n        this.wLg = this.wLg || this.w;\r\n        this.hLg = this.hLg || this.h;\r\n        this.wXl = this.wXl || this.w;\r\n        this.hXl = this.hXl || this.h;\r\n        this.zone.runOutsideAngular(() => {\r\n            this.enableDragDrop();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscribtions.forEach((sub: Subscription) => {\r\n            sub.unsubscribe();\r\n        });\r\n    }\r\n\r\n    onDrop (gridster: GridsterService): void {\r\n        if (!this.config.helper) {\r\n            this.$element.parentNode.removeChild(this.$element);\r\n        }\r\n\r\n        this.drop.emit({\r\n            item: this.item,\r\n            gridster: gridster\r\n        });\r\n    }\r\n\r\n    onCancel (): void {\r\n        this.cancel.emit({item: this.item});\r\n    }\r\n\r\n    onEnter (gridster: GridsterService): void {\r\n        this.enter.emit({\r\n            item: this.item,\r\n            gridster: gridster\r\n        });\r\n    }\r\n\r\n    onOver (gridster: GridsterService): void {}\r\n\r\n    onOut (gridster: GridsterService): void {\r\n        this.out.emit({\r\n            item: this.item,\r\n            gridster: gridster\r\n        });\r\n    }\r\n\r\n    getPositionToGridster(gridster: GridsterService) {\r\n        const relativeContainerCoords = this.getContainerCoordsToGridster(gridster);\r\n\r\n        return {\r\n            y: this.positionY - relativeContainerCoords.top,\r\n            x: this.positionX - relativeContainerCoords.left\r\n        };\r\n    }\r\n\r\n    setDragContextGridster(gridster: GridsterService) {\r\n        this.dragContextGridster = gridster;\r\n    }\r\n\r\n    private getContainerCoordsToGridster(gridster: GridsterService): {top: number, left: number} {\r\n        return {\r\n            left: gridster.gridsterRect.left - this.parentRect.left,\r\n            top: gridster.gridsterRect.top - this.parentRect.top\r\n        };\r\n    }\r\n\r\n    private enableDragDrop() {\r\n        let cursorToElementPosition: { x: number, y: number };\r\n        const draggable = new Draggable(this.elementRef.nativeElement);\r\n\r\n        const dragStartSub = draggable.dragStart\r\n            .subscribe((event: DraggableEvent) => {\r\n                this.zone.run(() => {\r\n                    this.$element = this.provideDragElement();\r\n                    this.containerRectange = this.$element.parentElement.getBoundingClientRect();\r\n                    this.updateParentElementData();\r\n                    this.onStart(event);\r\n\r\n                    cursorToElementPosition = event.getRelativeCoordinates(this.$element);\r\n                });\r\n            });\r\n\r\n        const dragSub = draggable.dragMove\r\n            .subscribe((event: DraggableEvent) => {\r\n\r\n                this.setElementPosition(this.$element, {\r\n                    x: event.clientX - cursorToElementPosition.x  - this.parentRect.left,\r\n                    y: event.clientY - cursorToElementPosition.y  - this.parentRect.top\r\n                });\r\n\r\n                this.onDrag(event);\r\n            });\r\n\r\n        const dragStopSub = draggable.dragStop\r\n            .subscribe((event: DraggableEvent) => {\r\n                this.zone.run(() => {\r\n                    this.onStop(event);\r\n                    this.$element = null;\r\n                });\r\n            });\r\n\r\n        const scrollSub = Observable.fromEvent(document, 'scroll')\r\n            .subscribe(() => {\r\n                if (this.$element) {\r\n                    this.updateParentElementData();\r\n                }\r\n            });\r\n\r\n        this.subscribtions = this.subscribtions.concat([dragStartSub, dragSub, dragStopSub, scrollSub]);\r\n    }\r\n\r\n    private setElementPosition(element: HTMLElement, position: {x: number, y: number}) {\r\n        this.positionX = position.x;\r\n        this.positionY = position.y;\r\n        utils.setCssElementPosition(element, position);\r\n    }\r\n\r\n    private updateParentElementData() {\r\n        this.parentRect = this.$element.parentElement.getBoundingClientRect();\r\n        this.parentOffset = {\r\n            left: this.$element.parentElement.offsetLeft,\r\n            top: this.$element.parentElement.offsetTop\r\n        };\r\n    }\r\n\r\n    private onStart (event: DraggableEvent): void {\r\n        this.isDragging = true;\r\n\r\n        this.$element.style.pointerEvents = 'none';\r\n        this.$element.style.position = 'absolute';\r\n\r\n        this.gridsterPrototype.dragItemStart(this, event);\r\n\r\n        this.start.emit({item: this.item});\r\n    }\r\n\r\n    private onDrag (event: DraggableEvent): void {\r\n        this.gridsterPrototype.updatePrototypePosition(this, event);\r\n    }\r\n\r\n    private onStop (event: DraggableEvent): void {\r\n        this.gridsterPrototype.dragItemStop(this, event);\r\n\r\n        this.isDragging = false;\r\n        this.$element.style.pointerEvents = 'auto';\r\n        this.$element.style.position = '';\r\n        utils.resetCSSElementPosition(this.$element);\r\n\r\n        if (this.config.helper) {\r\n            this.$element.parentNode.removeChild(this.$element);\r\n        }\r\n    }\r\n\r\n    private provideDragElement (): HTMLElement {\r\n        let dragElement = this.elementRef.nativeElement;\r\n\r\n        if (this.config.helper) {\r\n            dragElement = <any>(dragElement).cloneNode(true);\r\n\r\n            document.body.appendChild(this.fixStylesForBodyHelper(dragElement));\r\n        } else {\r\n            this.fixStylesForRelativeElement(dragElement);\r\n        }\r\n\r\n        return dragElement;\r\n    }\r\n\r\n    private fixStylesForRelativeElement(el: HTMLElement) {\r\n        if (window.getComputedStyle(el).position === 'absolute') {\r\n            return el;\r\n        }\r\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\r\n        this.containerRectange = el.parentElement.getBoundingClientRect();\r\n\r\n        el.style.position = 'absolute';\r\n        this.setElementPosition(el, {\r\n            x: rect.left - this.containerRectange.left,\r\n            y: rect.top - this.containerRectange.top\r\n        });\r\n\r\n        return el;\r\n    }\r\n\r\n    /**\r\n     * When element is cloned and append to body it should have position absolute and coords set by original\r\n     * relative prototype element position.\r\n     */\r\n    private fixStylesForBodyHelper (el: HTMLElement) {\r\n        const bodyRect = document.body.getBoundingClientRect();\r\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\r\n\r\n        el.style.position = 'absolute';\r\n        this.setElementPosition(el, {\r\n            x: rect.left - bodyRect.left,\r\n            y: rect.top - bodyRect.top\r\n        });\r\n\r\n        return el;\r\n    }\r\n\r\n}\r\n"]}