{"version":3,"file":"app.component.js","sourceRoot":"","sources":["../../../../src/app/app.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,SAAS,EAAU,SAAS,EAAE,iBAAiB,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,iBAAiB,EAAE,MAAM,uCAAuC,CAAC;AAU1E;IANA;QAoCI,gBAAW,GAAG;YACV,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,CAAC;SACf,CAAC;QACF,oBAAe,GAAqB;YAChC,oFAAoF;YACpF,KAAK,EAAE,CAAC;YACR,SAAS,EAAE,UAAU;YACrB,QAAQ,EAAE,IAAI;YACd,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;YACf,aAAa,EAAE;gBACX,CAAC,EAAE,IAAI;gBACP,CAAC,EAAE,IAAI;gBACP,EAAE,EAAE,IAAI;aACX;YACD,gBAAgB,EAAE,CAAC;YACnB,KAAK,EAAE;gBACH,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,SAAS;gBAChB,KAAK,EAAE,CAAC;aACX;YACD,MAAM,EAAE,IAAI;YACZ,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,kBAAkB,EAAE,GAAG;YACvB,eAAe,EAAE,IAAI;YACrB,uEAAuE;YACvE,wGAAwG;YACxG,yDAAyD;YACzD,4BAA4B;YAC5B,6BAA6B;YAC7B,4BAA4B;YAC5B,2BAA2B;YAC3B,2EAA2E;YAC3E,mFAAmF;YACnF,iBAAiB,EAAE;gBACf;oBACI,UAAU,EAAE,IAAI;oBAChB,iBAAiB;oBACjB,KAAK,EAAE,CAAC;iBACX;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,QAAQ,EAAE,GAAG;oBACb,KAAK,EAAE,CAAC;iBACX;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,CAAC;iBACX;gBACD;oBACI,UAAU,EAAE,IAAI;oBAChB,QAAQ,EAAE,IAAI;oBACd,KAAK,EAAE,CAAC;iBACX;aACJ;SACJ,CAAC;QACF,6BAAwB,GAA8B;YAClD,YAAY,EAAE,eAAe;SAChC,CAAC;QACF,UAAK,GAAG,kBAAkB,CAAC;QAC3B,gBAAW,GAAG,EAAE,CAAC;QACjB,YAAO,GAAe;YAClB;gBACI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,WAAW,EAAE,IAAI;gBACjB,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,qBAAqB;gBAC5B,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,EAAE;aACf;YACD;gBACI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,WAAW,EAAE,IAAI;gBACjB,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,qBAAqB;gBAC5B,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,EAAE;aACf;YACD;gBACI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,WAAW,EAAE,IAAI;gBACjB,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,qBAAqB;gBAC5B,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,EAAE;aACf;YACD;gBACI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,WAAW,EAAE,IAAI;gBACjB,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,qBAAqB;gBAC5B,QAAQ,EAAE,EAAE;aACf;YACD;gBACI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;gBACV,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;gBACd,WAAW,EAAE,IAAI;gBACjB,SAAS,EAAE,IAAI;gBACf,KAAK,EAAE,qBAAqB;gBAC5B,QAAQ,EAAE,EAAE;aACf;SACJ,CAAC;IAgJN,CAAC;qBA7SY,YAAY;IA+JrB,+BAAQ,GAAR;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,sBAAK,MAAM,EAAE,EAAb,CAAa,CAAC,CAAC;IACjE,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAK;QACV,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,iCAAU,GAAV,UAAW,QAA2B;QAClC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;aACpD,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,+BAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,8BAAO,GAAP,UAAQ,QAA2B;QAC/B,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;aACpD,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,+BAAQ,GAAR,UAAS,MAAW,EAAE,IAAY,EAAE,CAAa,EAAE,QAAQ;QACvD,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACX,IAAI,GAAG,CAAC,CAAC;QACb,CAAC;QACD,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;QAEhB,QAAQ,CAAC,MAAM,EAAE,CAAC;QAElB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,gCAAS,GAAT,UAAU,MAAW,EAAE,IAAY,EAAE,CAAa,EAAE,QAAQ;QACxD,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACX,IAAI,GAAG,CAAC,CAAC;QACb,CAAC;QACD,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;QAEhB,QAAQ,CAAC,MAAM,EAAE,CAAC;QAElB,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAED,oCAAa,GAAb,UAAc,OAAyB;QACnC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,2BAAI,GAAJ;QACI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,wCAAiB,GAAjB,UAAkB,QAA2B,EAAE,KAAU;QACrD,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,IAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;QAC/C,IAAM,MAAM,GAAG;YACX,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,YAAY;SACtB,CAAC;QAEF,MAAM,CAAC,cAAY,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAChE,MAAM,CAAC,cAAY,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAChE,MAAM,CAAC,cAAY,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAChE,MAAM,CAAC,cAAY,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAEhE,GAAG,CAAC,CAAkB,UAAwD,EAAxD,MAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAxD,cAAwD,EAAxD,IAAwD;YAAzE,IAAM,OAAO,SAAA;YACd,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACnD,MAAM,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACxD,CAAC;SACJ;QAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE1B,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED,2BAAI,GAAJ,UAAK,KAAK;QACN,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEtD,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACxG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAC1G,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,0BAAG,GAAH,UAAI,KAAK;QACL,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACzF,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QAC1F,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAClE,CAAC;IAED,2CAAoB,GAApB;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YACd,KAAK,EAAE,qBAAqB;YAC5B,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,yGAAyG;gBAClH,gHAAgH;gBAChH,kHAAkH;gBAClH,kHAAkH;gBAClH,UAAU;SACb,CAAC,CAAC;IACP,CAAC;IAED,gCAAS,GAAT,UAAU,QAA2B;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;YACd,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACtB,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,qBAAqB;YAC5B,OAAO,EAAE,yGAAyG;gBAClH,gHAAgH;gBAChH,kHAAkH;gBAClH,kHAAkH;gBAClH,UAAU;SACb,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,6BAAM,GAAN,UAAO,MAAM,EAAE,KAAa,EAAE,QAA2B;QACrD,MAAM,CAAC,cAAc,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,uCAAgB,GAAhB;QACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,iCAAU,GAAV,UAAW,MAAW,EAAE,QAAQ;QAC5B,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,mCAAY,GAAZ;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAA,MAAM,IAAI,OAAA,sBAAK,MAAM,EAAE,EAAb,CAAa,CAAC,CAAC;IACjE,CAAC;IA3SM,2BAAc,GAAQ;QACzB,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;KACZ,CAAC;IAEK,2BAAc,GAAQ;QACzB,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;KACZ,CAAC;IAEK,2BAAc,GAAQ;QACzB,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;KACZ,CAAC;IAEK,2BAAc,GAAQ;QACzB,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;QACT,EAAE,EAAE,KAAK;KACZ,CAAC;IAE4B;QAA7B,SAAS,CAAC,iBAAiB,CAAC;0CAAW,iBAAiB;kDAAC;IA7BjD,YAAY;QANxB,SAAS,CAAC;YACP,QAAQ,EAAE,WAAW;YACrB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;YAClC,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACxC,CAAC;OACW,YAAY,CA6SxB;IAAD,mBAAC;;CAAA,AA7SD,IA6SC;SA7SY,YAAY","sourcesContent":["import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { GridsterComponent } from './angular2gridster/gridster.component';\r\nimport { IGridsterOptions } from './angular2gridster/IGridsterOptions';\r\nimport { IGridsterDraggableOptions } from './angular2gridster/IGridsterDraggableOptions';\r\n\r\n@Component({\r\n    selector: 'demo-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AppComponent implements OnInit {\r\n    static X_PROPERTY_MAP: any = {\r\n        sm: 'xSm',\r\n        md: 'xMd',\r\n        lg: 'xLg',\r\n        xl: 'xXl'\r\n    };\r\n\r\n    static Y_PROPERTY_MAP: any = {\r\n        sm: 'ySm',\r\n        md: 'yMd',\r\n        lg: 'yLg',\r\n        xl: 'yXl'\r\n    };\r\n\r\n    static W_PROPERTY_MAP: any = {\r\n        sm: 'wSm',\r\n        md: 'wMd',\r\n        lg: 'wLg',\r\n        xl: 'wXl'\r\n    };\r\n\r\n    static H_PROPERTY_MAP: any = {\r\n        sm: 'hSm',\r\n        md: 'hMd',\r\n        lg: 'hLg',\r\n        xl: 'hXl'\r\n    };\r\n\r\n    @ViewChild(GridsterComponent) gridster: GridsterComponent;\r\n    itemOptions = {\r\n        maxWidth: 3,\r\n        maxHeight: 4\r\n    };\r\n    gridsterOptions: IGridsterOptions = {\r\n        // core configuration is default one - for smallest view. It has hidden minWidth: 0.\r\n        lanes: 2, // amount of lanes (cells) in the grid\r\n        direction: 'vertical', // floating top - vertical, left - horizontal\r\n        floating: true,\r\n        dragAndDrop: true, // enable/disable drag and drop for all items in grid\r\n        resizable: true, // enable/disable resizing by drag and drop for all items in grid\r\n        resizeHandles: {\r\n            s: true,\r\n            e: true,\r\n            se: true\r\n        },\r\n        widthHeightRatio: 1, // proportion between item width and height\r\n        lines: {\r\n            visible: true,\r\n            color: '#afafaf',\r\n            width: 2\r\n        },\r\n        shrink: true,\r\n        useCSSTransforms: true,\r\n        responsiveView: true, // turn on adopting items sizes on window resize and enable responsiveOptions\r\n        responsiveDebounce: 500, // window resize debounce time\r\n        responsiveSizes: true,\r\n        // List of different gridster configurations for different breakpoints.\r\n        // Each breakpoint is defined by name stored in \"breakpoint\" property. There is fixed set of breakpoints\r\n        // available to use with default minWidth assign to each.\r\n        // - sm: 576 - Small devices\r\n        // - md: 768 - Medium devices\r\n        // - lg: 992 - Large devices\r\n        // - xl: 1200 - Extra large\r\n        // MinWidth for each breakpoint can be overwritten like it's visible below.\r\n        // ResponsiveOptions can overwrite default configuration with any option available.\r\n        responsiveOptions: [\r\n            {\r\n                breakpoint: 'sm',\r\n                // minWidth: 480,\r\n                lanes: 3\r\n            },\r\n            {\r\n                breakpoint: 'md',\r\n                minWidth: 768,\r\n                lanes: 4\r\n            },\r\n            {\r\n                breakpoint: 'lg',\r\n                minWidth: 1250,\r\n                lanes: 6\r\n            },\r\n            {\r\n                breakpoint: 'xl',\r\n                minWidth: 1800,\r\n                lanes: 8\r\n            }\r\n        ]\r\n    };\r\n    gridsterDraggableOptions: IGridsterDraggableOptions = {\r\n        handlerClass: 'panel-heading'\r\n    };\r\n    title = 'Angular2Gridster';\r\n    widgetsCopy = [];\r\n    widgets: Array<any> = [\r\n        {\r\n            x: 0, y: 0,\r\n            w: 1, h: 2,\r\n            wSm: 1, hSm: 1,\r\n            wMd: 1, hMd: 2,\r\n            wLg: 1, hLg: 1,\r\n            wXl: 2, hXl: 2,\r\n            dragAndDrop: true,\r\n            resizable: true,\r\n            title: 'Basic form inputs 1',\r\n            variableHeight: false,\r\n            contents: []\r\n        },\r\n        {\r\n            x: 1, y: 0,\r\n            w: 1, h: 2,\r\n            wSm: 2, hSm: 1,\r\n            wMd: 2, hMd: 1,\r\n            wLg: 3, hLg: 1,\r\n            wXl: 3, hXl: 1,\r\n            dragAndDrop: true,\r\n            resizable: true,\r\n            title: 'Basic form inputs 2',\r\n            variableHeight: false,\r\n            contents: []\r\n        },\r\n        {\r\n            x: 1, y: 1,\r\n            w: 2, h: 1,\r\n            wSm: 1, hSm: 2,\r\n            wMd: 1, hMd: 2,\r\n            wLg: 2, hLg: 1,\r\n            wXl: 3, hXl: 1,\r\n            dragAndDrop: true,\r\n            resizable: true,\r\n            title: 'Basic form inputs 3',\r\n            variableHeight: true,\r\n            contents: []\r\n        },\r\n        {\r\n            x: 3, y: 1,\r\n            w: 1, h: 2,\r\n            wSm: 1, hSm: 2,\r\n            wMd: 1, hMd: 2,\r\n            wLg: 3, hLg: 1,\r\n            wXl: 3, hXl: 1,\r\n            dragAndDrop: true,\r\n            resizable: true,\r\n            title: 'Basic form inputs 4',\r\n            contents: []\r\n        },\r\n        {\r\n            w: 1, h: 2,\r\n            wSm: 1, hSm: 2,\r\n            wMd: 1, hMd: 2,\r\n            wLg: 3, hLg: 1,\r\n            wXl: 3, hXl: 1,\r\n            dragAndDrop: true,\r\n            resizable: true,\r\n            title: 'Basic form inputs x',\r\n            contents: []\r\n        }\r\n    ];\r\n\r\n    ngOnInit() {\r\n        this.widgetsCopy = this.widgets.map(widget => ({...widget}));\r\n    }\r\n\r\n    onReflow(event) {\r\n        console.log('onReflow', event);\r\n    }\r\n\r\n    removeLine(gridster: GridsterComponent) {\r\n        gridster.setOption('lanes', --this.gridsterOptions.lanes)\r\n            .reload();\r\n    }\r\n\r\n    getTitle() {\r\n        return this.title;\r\n    }\r\n\r\n    addLine(gridster: GridsterComponent) {\r\n        gridster.setOption('lanes', ++this.gridsterOptions.lanes)\r\n            .reload();\r\n    }\r\n\r\n    setWidth(widget: any, size: number, e: MouseEvent, gridster) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (size < 1) {\r\n            size = 1;\r\n        }\r\n        widget.w = size;\r\n\r\n        gridster.reload();\r\n\r\n        return false;\r\n    }\r\n\r\n    setHeight(widget: any, size: number, e: MouseEvent, gridster) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (size < 1) {\r\n            size = 1;\r\n        }\r\n        widget.h = size;\r\n\r\n        gridster.reload();\r\n\r\n        return false;\r\n    }\r\n\r\n    optionsChange(options: IGridsterOptions) {\r\n        this.gridsterOptions = options;\r\n        console.log('options change:', options);\r\n    }\r\n\r\n    swap() {\r\n        this.widgets[0].x = 3;\r\n        this.widgets[3].x = 0;\r\n    }\r\n\r\n    addWidgetFromDrag(gridster: GridsterComponent, event: any) {\r\n        const item = event.item;\r\n        const breakpoint = gridster.options.breakpoint;\r\n        const widget = {\r\n            dragAndDrop: true,\r\n            resizable: true,\r\n            title: 'New widget'\r\n        };\r\n\r\n        widget[AppComponent.W_PROPERTY_MAP[breakpoint] || 'w'] = item.w;\r\n        widget[AppComponent.H_PROPERTY_MAP[breakpoint] || 'h'] = item.h;\r\n        widget[AppComponent.X_PROPERTY_MAP[breakpoint] || 'x'] = item.x;\r\n        widget[AppComponent.Y_PROPERTY_MAP[breakpoint] || 'y'] = item.y;\r\n\r\n        for (const rwdProp of ['wSm', 'hSm', 'wMd', 'hMd', 'wLg', 'hLg', 'wXl', 'hXl']) {\r\n            if (event.item.itemPrototype.hasOwnProperty(rwdProp)) {\r\n                widget[rwdProp] = event.item.itemPrototype[rwdProp];\r\n            }\r\n        }\r\n\r\n        this.widgets.push(widget);\r\n\r\n        console.log('add widget from drag to:', gridster);\r\n    }\r\n\r\n    over(event) {\r\n        const size = event.item.calculateSize(event.gridster);\r\n\r\n        event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.width = size.width + 'px';\r\n        event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.height = size.height + 'px';\r\n        event.item.itemPrototype.$element.classList.add('is-over');\r\n    }\r\n\r\n    out(event) {\r\n        event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.width = '';\r\n        event.item.itemPrototype.$element.querySelector('.gridster-item-inner').style.height = '';\r\n        event.item.itemPrototype.$element.classList.remove('is-over');\r\n    }\r\n\r\n    addWidgetWithoutData() {\r\n        this.widgets.push({\r\n            title: 'Basic form inputs X',\r\n            dragAndDrop: true,\r\n            resizable: true,\r\n            content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et ' +\r\n            'dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea ' +\r\n            'commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla ' +\r\n            'pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est ' +\r\n            'laborum.'\r\n        });\r\n    }\r\n\r\n    addWidget(gridster: GridsterComponent) {\r\n        this.widgets.push({\r\n            x: 4, y: 0, w: 1, h: 1,\r\n            dragAndDrop: true,\r\n            resizable: true,\r\n            title: 'Basic form inputs 5',\r\n            content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et ' +\r\n            'dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea ' +\r\n            'commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla ' +\r\n            'pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est ' +\r\n            'laborum.'\r\n        });\r\n        console.log('widget push', this.widgets[this.widgets.length - 1]);\r\n    }\r\n\r\n    remove($event, index: number, gridster: GridsterComponent) {\r\n        $event.preventDefault();\r\n        this.widgets.splice(index, 1);\r\n        console.log('widget remove', index);\r\n    }\r\n\r\n    removeAllWidgets() {\r\n        this.widgets = [];\r\n    }\r\n\r\n    itemChange($event: any, gridster) {\r\n        console.log('item change', $event);\r\n    }\r\n\r\n    resetWidgets() {\r\n        this.widgets = this.widgetsCopy.map(widget => ({...widget}));\r\n    }\r\n}\r\n"]}